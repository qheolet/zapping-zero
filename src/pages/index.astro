---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../data/consts";
import FormattedDate from "../components/FormattedDate.astro";
import { getPosts, getTags } from "../utils/tags";
import type { PaginateFunction } from "astro";

const posts = await getPosts(20);
const tags = await getTags();
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style lang="scss">
      body {
        /* background-image: url("/myvoice.webp");
				background-size: 100% auto; */
        font-family: "Montserrat";

        main {
          width: 960px;
        }

        section ul {
          display: flex;
          flex-wrap: wrap;
          gap: 2rem;
          list-style-type: none;
          margin: 0;
          padding: 0;
          li {
            width: calc(50% - 1rem);
            * {
              text-decoration: none;
              transition: 0.2s ease;
            }
            &:first-child {
              width: 100%;
              margin-bottom: 1rem;
              text-align: center;
            }
            &:first-child {
              width: 100%;
              margin-bottom: 1rem;
              text-align: center;
            }

            &:first-child img {
              width: 100%;
            }
            &:first-child .title {
              font-size: 2.369rem;
            }
            img {
              margin-bottom: 0.5rem;
              border-radius: 12px;
            }
            a {
              display: block;
              &:hover h4,
              &:hover .date {
                color: rgb(var(--accent));
              }
              &:hover img {
                box-shadow: var(--box-shadow);
              }
            }
          }
        }
      }

      .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
      }
      .date {
        margin: 0;
        color: rgb(var(--gray));
      }

      .description {
        color: black;
      }

      .read-time {
        font-size: 14px;
        font-weight: bold;
      }
      @media (max-width: 720px) {
        section ul {
          gap: 0.5em;
        }
        section ul li {
          width: 100%;
          text-align: center;
        }
        section ul li:first-child {
          margin-bottom: 0;
        }
        section ul li:first-child .title {
          font-size: 1.563em;
        }
      }
      .tags {
        ul {
          list-style: none;
          text-align: center;
          padding: 0;
          li {
            display: inline-block;
            padding: 6px 10px;
            background-color: var(--accent);
            margin: 0 5px 10px;
            font-size: 14px;
            box-shadow: 3px 3px black;
            font-weight: bold;
            border: 1px dashed black;
            a {
              color: black;
              text-decoration: none;
            }
          }
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section>
        <ul>
          {
            posts.map(async (post) => {
              const { remarkPluginFrontmatter } = await post.render();
              return (
                <li>
                  <a href={`/blog/${post.slug}/`}>
                    <img
                      width={720}
                      height={360}
                      src={post.data.heroImage}
                      alt=""
                    />
                    <h4 class="title">{post.data.title}</h4>
                    <p class="date">
                      <FormattedDate date={post.data.pubDate} /> <br />
                      <span class="read-time">
                        {remarkPluginFrontmatter.minutesRead}
                      </span>
                    </p>

                    <p class="description">{post.data.description}</p>
                  </a>
                </li>
              );
            })
          }
        </ul>
      </section>
      {
        tags && tags.length > 0 && (
          <div class="tags">
            <ul>
              {tags.map((d: any) => {
                return (
                  <li>
                    <a href={`/tags/${d.toLowerCase()}`}>{d}</a>
                  </li>
                );
              })}
            </ul>
          </div>
        )
      }
    </main>
    <Footer />
  </body>
</html>
